<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RkdIEgACAQAAAAAAAAAAAAAAAAAAAAMiABMREBozMzMoKjQsNTUtNjY3ODg5OQ06Ozw9AAMAAAAAAAAA
        AAAAAAAAAAAAAAAAAwAiFSMQGyQlJicoKSorKxssLS0PLi8gMDEAMgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAABQVEQsQFhcYGRobHBYdHh8gCyEUAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQAAAAYICQoL
        DA0ODw8QERITAgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQACAAAAAAMEBQYHBQQDAAAAAAIC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEAAAABAAECAgMAAAAAAAACAQEBAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>